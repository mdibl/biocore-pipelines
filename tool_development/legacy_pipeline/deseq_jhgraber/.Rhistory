colData <- as.matrix(read.table(jObj$design_file_name, header = TRUE, sep = jObj$separator))
library("rjson")
install.packages(rjson)
install.packages("rjson")
intargs <- commandArgs(trailingOnly = TRUE)
summary(colData)
library("rjson")
args <- commandArgs(trailingOnly = TRUE)
jObj <- fromJSON(file = args[1])
summary(jObj)
jObj
library("DESeq2")
summary(countData)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2", version = "3.8")
dataset <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = as.formula(paste("",jObj$model_formula, sep = " ~ ")))
summary(countData)
countData <- round(countData)
colData <- as.matrix(read.table(jObj$design_file_name, header = TRUE, sep = jObj$separator))
summary(colData)
des <- paste("",paste(as.vector(jObj$model_formula_terms),collapse= " + "), sep = " ~ ")
print(des)
dataset <- DESeqDataSetFromMatrix(countData = countData, colData = colData, design = as.formula(des))
dataset <- dataset[rowSums(counts(dataset)) > jObj$row_sum_th, ]
summary(dataset)
dataset <- DESeq(dataset)
resultsNames(dataset)
for(i in 1:dim(as.matrix(jObj$contrasts))[1]) {
filetemp <- paste(unlist(jObj$contrasts[i]),sep="_",collapse="-")
filename <- paste(jObj$output_prefix,filetemp,"DESeq2out.csv", sep="_")
print(dim(unlist(jObj$contrasts[i])))
res <- results(dataset,c(unlist(jObj$contrasts[i])))
summary(res)
write.csv(as.data.frame(res),file=filename)
}
dataset <- dataset[rowSums(counts(dataset)) > jObj$row_sum_th, ]
load("~/Desktop/deseq_jhgraber/corOnly_design.txt")
load("~/Desktop/deseq_jhgraber/justStressed_design.txt")
install.packages("rjson")
